{"ast":null,"code":"var _jsxFileName = \"/Users/mariofayolle/Desktop/PROJECT_WEB_OCRES-master/frontend/src/components/Cards/Cards.jsx\";\nimport React from \"react\"; // Material equivalent de Bootstrap\n\nimport { Card, CardContent, Typography, Grid } from \"@material-ui/core\";\nimport { spacing } from \"@material-ui/system\";\nimport CountUp from \"react-countup\";\nimport cx from \"classnames\"; //css\n\nimport styles from \"./Cards.module.css\"; // On recupère les données avev PROPS\n// Cards = {props} => on le destructure comme ça on peut acceder directement aux valeurs de data (dont à a accés depuis App.js)\n\nconst Cards = ({\n  data: {\n    confirmed,\n    recovered,\n    deaths,\n    lastUpdate\n  }\n}) => {\n  let getCurrentDate = (separator = \"/\") => {\n    let newDate = new Date();\n    let date = newDate.getDate();\n    let month = newDate.getMonth() + 1;\n    let year = newDate.getFullYear();\n    return \"\".concat(year).concat(separator).concat(month < 10 ? \"0\".concat(month) : \"\".concat(month)).concat(separator).concat(date);\n  };\n\n  if (!confirmed) {\n    // si confirmed n'est pas encore chargé alors on retourne Loading...\n    return \"Loading...\";\n  } // sinon\n\n\n  return React.createElement(\"div\", {\n    className: styles.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    variant: \"h6\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, \"Rappel CoVid-19\"), React.createElement(Typography, {\n    variant: \"body2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, \"Le port du masque est toujours obligatoire \\xE0 l'\\xE9cole\"), React.createElement(Grid, {\n    container: true,\n    justify: \"space-around\",\n    className: styles.containerCard,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    component: Card,\n    classNames: cx(styles.card, styles.infected),\n    xs: 12,\n    md: 3,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, React.createElement(CardContent, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    color: \"textSeconday\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, \"Infect\\xE9s\"), React.createElement(Typography, {\n    variant: \"h5\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, React.createElement(CountUp, {\n    start: 0,\n    end: confirmed.value,\n    duration: 2.5,\n    separator: \",\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  })), \" \", React.createElement(Typography, {\n    color: \"textSeconday\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, getCurrentDate()), React.createElement(Typography, {\n    variant: \"body2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, \" \", \"Nombre d'infect\\xE9s du Covid-19\"))), React.createElement(Grid, {\n    item: true,\n    component: Card,\n    classNames: cx(styles.card, styles.recovered),\n    xs: 12,\n    md: 3,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, React.createElement(CardContent, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    color: \"textSeconday\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, \" Gu\\xE9ris\"), React.createElement(Typography, {\n    variant: \"h5\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, \" \", React.createElement(CountUp, {\n    start: 0,\n    end: recovered.value,\n    duration: 2.5,\n    separator: \",\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  })), React.createElement(Typography, {\n    color: \"textSeconday\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, getCurrentDate()), React.createElement(Typography, {\n    variant: \"body2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, \" \", \"Nombre de gu\\xE9ris du Covid-19\", \" \"))), React.createElement(Grid, {\n    item: true,\n    component: Card,\n    classNames: cx(styles.card, styles.deaths),\n    xs: 12,\n    md: 3,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }, React.createElement(CardContent, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    color: \"textSeconday\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }, \" D\\xE9c\\xE9s\"), React.createElement(Typography, {\n    variant: \"h5\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }, \" \", React.createElement(CountUp, {\n    start: 0,\n    end: deaths.value,\n    duration: 2.5,\n    separator: \",\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  })), React.createElement(Typography, {\n    color: \"textSeconday\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    },\n    __self: this\n  }, getCurrentDate()), React.createElement(Typography, {\n    variant: \"body2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116\n    },\n    __self: this\n  }, \" \", \"Nombre de d\\xE9c\\xE9s du Covid-19\")))));\n};\n\nexport default Cards;","map":{"version":3,"sources":["/Users/mariofayolle/Desktop/PROJECT_WEB_OCRES-master/frontend/src/components/Cards/Cards.jsx"],"names":["React","Card","CardContent","Typography","Grid","spacing","CountUp","cx","styles","Cards","data","confirmed","recovered","deaths","lastUpdate","getCurrentDate","separator","newDate","Date","date","getDate","month","getMonth","year","getFullYear","container","containerCard","card","infected","value"],"mappings":"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","sourcesContent":["import React from \"react\";\n\n// Material equivalent de Bootstrap\nimport { Card, CardContent, Typography, Grid } from \"@material-ui/core\";\nimport { spacing } from \"@material-ui/system\";\n\nimport CountUp from \"react-countup\";\nimport cx from \"classnames\";\n\n//css\nimport styles from \"./Cards.module.css\";\n\n// On recupère les données avev PROPS\n// Cards = {props} => on le destructure comme ça on peut acceder directement aux valeurs de data (dont à a accés depuis App.js)\nconst Cards = ({ data: { confirmed, recovered, deaths, lastUpdate } }) => {\n  let getCurrentDate = (separator = \"/\") => {\n    let newDate = new Date();\n    let date = newDate.getDate();\n    let month = newDate.getMonth() + 1;\n    let year = newDate.getFullYear();\n\n    return `${year}${separator}${\n      month < 10 ? `0${month}` : `${month}`\n    }${separator}${date}`;\n  };\n\n  if (!confirmed) {\n    // si confirmed n'est pas encore chargé alors on retourne Loading...\n    return \"Loading...\";\n  }\n  // sinon\n  return (\n    <div className={styles.container}>\n      {/* Sur les petits devices (xs = 12) 12 veut dire que ça prendra toute la place de l'écran */}\n      {/* md={3} veut dire que sur les écrans moyen et + grands ça prendra que 3/12eme de la place de l'écran */}\n      <Typography variant=\"h6\">Rappel CoVid-19</Typography>\n      <Typography variant=\"body2\">\n        Le port du masque est toujours obligatoire à l'école\n      </Typography>\n      <Grid container justify=\"space-around\" className={styles.containerCard}>\n        <Grid\n          item\n          component={Card}\n          classNames={cx(styles.card, styles.infected)}\n          xs={12}\n          md={3}\n        >\n          <CardContent>\n            <Typography color=\"textSeconday\">Infectés</Typography>\n            <Typography variant=\"h5\">\n              <CountUp\n                start={0}\n                end={confirmed.value}\n                duration={2.5}\n                separator={\",\"}\n              />\n            </Typography>{\" \"}\n            {/* {confirmed.value}  */}\n            <Typography color=\"textSeconday\">{getCurrentDate()}</Typography>\n            <Typography variant=\"body2\">\n              {\" \"}\n              Nombre d'infectés du Covid-19\n            </Typography>\n          </CardContent>\n        </Grid>\n\n        {/*  */}\n\n        <Grid\n          item\n          component={Card}\n          classNames={cx(styles.card, styles.recovered)}\n          xs={12}\n          md={3}\n        >\n          <CardContent>\n            <Typography color=\"textSeconday\"> Guéris</Typography>\n            <Typography variant=\"h5\">\n              {\" \"}\n              <CountUp\n                start={0}\n                end={recovered.value}\n                duration={2.5}\n                separator={\",\"}\n              />\n            </Typography>\n            <Typography color=\"textSeconday\">{getCurrentDate()}</Typography>\n            <Typography variant=\"body2\">\n              {\" \"}\n              Nombre de guéris du Covid-19{\" \"}\n            </Typography>\n          </CardContent>\n        </Grid>\n\n        {/*  */}\n\n        <Grid\n          item\n          component={Card}\n          classNames={cx(styles.card, styles.deaths)}\n          xs={12}\n          md={3}\n        >\n          <CardContent>\n            <Typography color=\"textSeconday\"> Décés</Typography>\n            <Typography variant=\"h5\">\n              {\" \"}\n              <CountUp\n                start={0}\n                end={deaths.value}\n                duration={2.5}\n                separator={\",\"}\n              />\n            </Typography>\n            <Typography color=\"textSeconday\">{getCurrentDate()}</Typography>\n            <Typography variant=\"body2\">\n              {\" \"}\n              Nombre de décés du Covid-19\n            </Typography>\n          </CardContent>\n        </Grid>\n\n        {/*  */}\n      </Grid>\n    </div>\n  );\n};\n\nexport default Cards;\n"]},"metadata":{},"sourceType":"module"}