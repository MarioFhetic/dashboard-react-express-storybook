{"ast":null,"code":"var _jsxFileName = \"/Users/mariofayolle/Desktop/PROJECT_WEB_OCRES-master/frontend/src/components/Cards/Cards.jsx\";\nimport React from \"react\"; // Material equivalent de Bootstrap\n\nimport { Card, CardContent, Typography, Grid, styled } from \"@material-ui/core\";\nimport CountUp from \"react-countup\";\nimport cx from \"classnames\"; //css\n\nimport styles from \"./Cards.module.css\"; // On recupère les données avev PROPS\n// Cards = {props} => on le destructure comme ça on peut acceder directement aux valeurs de data (dont à a accés depuis App.js)\n\nconst Cards = ({\n  data: {\n    confirmed,\n    recovered,\n    deaths,\n    lastUpdate\n  }\n}) => {\n  if (!confirmed) {\n    // si confirmed n'est pas encore chargé alors on retourne Loading...\n    return \"Loading...\";\n  } // sinon\n\n\n  return React.createElement(\"div\", {\n    className: styled.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    container: true,\n    spacing: 3,\n    justify: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    component: Card,\n    classNames: cx(styles.card, styles.confirmed),\n    xs: 12,\n    md: 3,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, React.createElement(CardContent, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    color: \"textSeconday\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, \" Infected\"), React.createElement(Typography, {\n    variant: \"h5\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, React.createElement(CountUp, {\n    start: 0,\n    end: confirmed.value,\n    duration: 2.5,\n    separator: \",\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  })), \" \", React.createElement(Typography, {\n    color: \"textSeconday\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, new Date(lastUpdate).toDateString()), React.createElement(Typography, {\n    variant: \"body2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, \" Number of covid blabla\"))), React.createElement(Grid, {\n    item: true,\n    component: Card,\n    classNames: cx(styles.card, styles.recovered),\n    xs: 12,\n    md: 3,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, React.createElement(CardContent, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    color: \"textSeconday\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, \" Recovered\"), React.createElement(Typography, {\n    variant: \"h5\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, \" \", React.createElement(CountUp, {\n    start: 0,\n    end: recovered.value,\n    duration: 2.5,\n    separator: \",\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  })), React.createElement(Typography, {\n    color: \"textSeconday\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, \" \", new Date(lastUpdate).toDateString()), React.createElement(Typography, {\n    variant: \"body2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, \" \", \"Number of Recovered covid blabla\"))), React.createElement(Grid, {\n    item: true,\n    component: Card,\n    classNames: cx(styles.card, styles.deaths),\n    xs: 12,\n    md: 3,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, React.createElement(CardContent, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    color: \"textSeconday\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, \" Death\"), React.createElement(Typography, {\n    variant: \"h5\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, \" \", React.createElement(CountUp, {\n    start: 0,\n    end: deaths.value,\n    duration: 2.5,\n    separator: \",\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  })), React.createElement(Typography, {\n    color: \"textSeconday\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }, \" \", new Date(lastUpdate).toDateString()), React.createElement(Typography, {\n    variant: \"body2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }, \" \", \"Number of Death covid blabla\")))));\n};\n\nexport default Cards;","map":{"version":3,"sources":["/Users/mariofayolle/Desktop/PROJECT_WEB_OCRES-master/frontend/src/components/Cards/Cards.jsx"],"names":["React","Card","CardContent","Typography","Grid","styled","CountUp","cx","styles","Cards","data","confirmed","recovered","deaths","lastUpdate","container","card","value","Date","toDateString"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CAEA;;AACA,SAASC,IAAT,EAAeC,WAAf,EAA4BC,UAA5B,EAAwCC,IAAxC,EAA8CC,MAA9C,QAA4D,mBAA5D;AAEA,OAAOC,OAAP,MAAoB,eAApB;AACA,OAAOC,EAAP,MAAe,YAAf,C,CAEA;;AACA,OAAOC,MAAP,MAAmB,oBAAnB,C,CAEA;AACA;;AACA,MAAMC,KAAK,GAAG,CAAC;AAAEC,EAAAA,IAAI,EAAE;AAAEC,IAAAA,SAAF;AAAaC,IAAAA,SAAb;AAAwBC,IAAAA,MAAxB;AAAgCC,IAAAA;AAAhC;AAAR,CAAD,KAA4D;AACxE,MAAI,CAACH,SAAL,EAAgB;AACd;AACA,WAAO,YAAP;AACD,GAJuE,CAKxE;;;AACA,SACE;AAAK,IAAA,SAAS,EAAEN,MAAM,CAACU,SAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGE,oBAAC,IAAD;AAAM,IAAA,SAAS,MAAf;AAAgB,IAAA,OAAO,EAAE,CAAzB;AAA4B,IAAA,OAAO,EAAC,QAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AACE,IAAA,IAAI,MADN;AAEE,IAAA,SAAS,EAAEd,IAFb;AAGE,IAAA,UAAU,EAAEM,EAAE,CAACC,MAAM,CAACQ,IAAR,EAAcR,MAAM,CAACG,SAArB,CAHhB;AAIE,IAAA,EAAE,EAAE,EAJN;AAKE,IAAA,EAAE,EAAE,CALN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAOE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,UAAD;AAAY,IAAA,KAAK,EAAC,cAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,EAEE,oBAAC,UAAD;AAAY,IAAA,OAAO,EAAC,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,OAAD;AACE,IAAA,KAAK,EAAE,CADT;AAEE,IAAA,GAAG,EAAEA,SAAS,CAACM,KAFjB;AAGE,IAAA,QAAQ,EAAE,GAHZ;AAIE,IAAA,SAAS,EAAE,GAJb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAFF,EASgB,GAThB,EAWE,oBAAC,UAAD;AAAY,IAAA,KAAK,EAAC,cAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,IAAIC,IAAJ,CAASJ,UAAT,EAAqBK,YAArB,EADH,CAXF,EAcE,oBAAC,UAAD;AAAY,IAAA,OAAO,EAAC,OAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAdF,CAPF,CADF,EA0BE,oBAAC,IAAD;AACE,IAAA,IAAI,MADN;AAEE,IAAA,SAAS,EAAElB,IAFb;AAGE,IAAA,UAAU,EAAEM,EAAE,CAACC,MAAM,CAACQ,IAAR,EAAcR,MAAM,CAACI,SAArB,CAHhB;AAIE,IAAA,EAAE,EAAE,EAJN;AAKE,IAAA,EAAE,EAAE,CALN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAOE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,UAAD;AAAY,IAAA,KAAK,EAAC,cAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,EAEE,oBAAC,UAAD;AAAY,IAAA,OAAO,EAAC,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,GADH,EAEE,oBAAC,OAAD;AACE,IAAA,KAAK,EAAE,CADT;AAEE,IAAA,GAAG,EAAEA,SAAS,CAACK,KAFjB;AAGE,IAAA,QAAQ,EAAE,GAHZ;AAIE,IAAA,SAAS,EAAE,GAJb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CAFF,EAWE,oBAAC,UAAD;AAAY,IAAA,KAAK,EAAC,cAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,GADH,EAEG,IAAIC,IAAJ,CAASJ,UAAT,EAAqBK,YAArB,EAFH,CAXF,EAeE,oBAAC,UAAD;AAAY,IAAA,OAAO,EAAC,OAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,GADH,qCAfF,CAPF,CA1BF,EAuDE,oBAAC,IAAD;AACE,IAAA,IAAI,MADN;AAEE,IAAA,SAAS,EAAElB,IAFb;AAGE,IAAA,UAAU,EAAEM,EAAE,CAACC,MAAM,CAACQ,IAAR,EAAcR,MAAM,CAACK,MAArB,CAHhB;AAIE,IAAA,EAAE,EAAE,EAJN;AAKE,IAAA,EAAE,EAAE,CALN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAOE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,UAAD;AAAY,IAAA,KAAK,EAAC,cAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAEE,oBAAC,UAAD;AAAY,IAAA,OAAO,EAAC,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,GADH,EAEE,oBAAC,OAAD;AACE,IAAA,KAAK,EAAE,CADT;AAEE,IAAA,GAAG,EAAEA,MAAM,CAACI,KAFd;AAGE,IAAA,QAAQ,EAAE,GAHZ;AAIE,IAAA,SAAS,EAAE,GAJb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CAFF,EAWE,oBAAC,UAAD;AAAY,IAAA,KAAK,EAAC,cAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,GADH,EAEG,IAAIC,IAAJ,CAASJ,UAAT,EAAqBK,YAArB,EAFH,CAXF,EAeE,oBAAC,UAAD;AAAY,IAAA,OAAO,EAAC,OAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,GADH,iCAfF,CAPF,CAvDF,CAHF,CADF;AA0FD,CAhGD;;AAkGA,eAAeV,KAAf","sourcesContent":["import React from \"react\";\n\n// Material equivalent de Bootstrap\nimport { Card, CardContent, Typography, Grid, styled } from \"@material-ui/core\";\n\nimport CountUp from \"react-countup\";\nimport cx from \"classnames\";\n\n//css\nimport styles from \"./Cards.module.css\";\n\n// On recupère les données avev PROPS\n// Cards = {props} => on le destructure comme ça on peut acceder directement aux valeurs de data (dont à a accés depuis App.js)\nconst Cards = ({ data: { confirmed, recovered, deaths, lastUpdate } }) => {\n  if (!confirmed) {\n    // si confirmed n'est pas encore chargé alors on retourne Loading...\n    return \"Loading...\";\n  }\n  // sinon\n  return (\n    <div className={styled.container}>\n      {/* Sur les petits devices (xs = 12) 12 veut dire que ça prendra toute la place de l'écran */}\n      {/* md={3} veut dire que sur les écrans moyen et + grands ça prendra que 3/12eme de la place de l'écran */}\n      <Grid container spacing={3} justify=\"center\">\n        <Grid\n          item\n          component={Card}\n          classNames={cx(styles.card, styles.confirmed)}\n          xs={12}\n          md={3}\n        >\n          <CardContent>\n            <Typography color=\"textSeconday\"> Infected</Typography>\n            <Typography variant=\"h5\">\n              <CountUp\n                start={0}\n                end={confirmed.value}\n                duration={2.5}\n                separator={\",\"}\n              />\n            </Typography>{\" \"}\n            {/* {confirmed.value}  */}\n            <Typography color=\"textSeconday\">\n              {new Date(lastUpdate).toDateString()}\n            </Typography>\n            <Typography variant=\"body2\"> Number of covid blabla</Typography>\n          </CardContent>\n        </Grid>\n\n        <Grid\n          item\n          component={Card}\n          classNames={cx(styles.card, styles.recovered)}\n          xs={12}\n          md={3}\n        >\n          <CardContent>\n            <Typography color=\"textSeconday\"> Recovered</Typography>\n            <Typography variant=\"h5\">\n              {\" \"}\n              <CountUp\n                start={0}\n                end={recovered.value}\n                duration={2.5}\n                separator={\",\"}\n              />\n            </Typography>\n            <Typography color=\"textSeconday\">\n              {\" \"}\n              {new Date(lastUpdate).toDateString()}\n            </Typography>\n            <Typography variant=\"body2\">\n              {\" \"}\n              Number of Recovered covid blabla\n            </Typography>\n          </CardContent>\n        </Grid>\n\n        <Grid\n          item\n          component={Card}\n          classNames={cx(styles.card, styles.deaths)}\n          xs={12}\n          md={3}\n        >\n          <CardContent>\n            <Typography color=\"textSeconday\"> Death</Typography>\n            <Typography variant=\"h5\">\n              {\" \"}\n              <CountUp\n                start={0}\n                end={deaths.value}\n                duration={2.5}\n                separator={\",\"}\n              />\n            </Typography>\n            <Typography color=\"textSeconday\">\n              {\" \"}\n              {new Date(lastUpdate).toDateString()}\n            </Typography>\n            <Typography variant=\"body2\">\n              {\" \"}\n              Number of Death covid blabla\n            </Typography>\n          </CardContent>\n        </Grid>\n      </Grid>\n    </div>\n  );\n};\n\nexport default Cards;\n"]},"metadata":{},"sourceType":"module"}